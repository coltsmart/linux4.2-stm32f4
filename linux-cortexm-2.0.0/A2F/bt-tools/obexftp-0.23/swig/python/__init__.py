# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _obexftp
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


IRDA = _obexftp.IRDA
INET = _obexftp.INET
CABLE = _obexftp.CABLE
BLUETOOTH = _obexftp.BLUETOOTH
USB = _obexftp.USB
SYNC = _obexftp.SYNC
PUSH = _obexftp.PUSH
FTP = _obexftp.FTP
discover = _obexftp.discover
browsebt = _obexftp.browsebt
class client(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, client, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, client, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _obexftp.new_client(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _obexftp.delete_client
    __del__ = lambda self : None;
    def callback(*args): return _obexftp.client_callback(*args)
    def discover(*args): return _obexftp.client_discover(*args)
    def connect(*args): return _obexftp.client_connect(*args)
    def connectpush(*args): return _obexftp.client_connectpush(*args)
    def connectsync(*args): return _obexftp.client_connectsync(*args)
    def disconnect(*args): return _obexftp.client_disconnect(*args)
    def chpath(*args): return _obexftp.client_chpath(*args)
    def mkpath(*args): return _obexftp.client_mkpath(*args)
    def cdup(*args): return _obexftp.client_cdup(*args)
    def cdtop(*args): return _obexftp.client_cdtop(*args)
    def get(*args): return _obexftp.client_get(*args)
    def list(*args): return _obexftp.client_list(*args)
    def get_capability(*args): return _obexftp.client_get_capability(*args)
    def get_file(*args): return _obexftp.client_get_file(*args)
    def put_file(*args): return _obexftp.client_put_file(*args)
    def put_data(*args): return _obexftp.client_put_data(*args)
    def delete(*args): return _obexftp.client_delete(*args)
client_swigregister = _obexftp.client_swigregister
client_swigregister(client)



