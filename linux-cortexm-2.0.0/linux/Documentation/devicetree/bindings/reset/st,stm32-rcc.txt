STMicroelectronics STM32 Peripheral Reset Controller
====================================================

The RCC IP is both a reset and a clock controller. This documentation only
documents the reset part.

Please also refer to reset.txt in this directory for common reset
controller binding usage.

Required properties:
- compatible: Should be "st,stm32-rcc"
- reg: should be register base and length as documented in the
  datasheet
- #reset-cells: 1, see below

example:

rcc: reset@40023800 {
	#reset-cells = <1>;
	compatible = "st,stm32-rcc";
	reg = <0x40023800 0x400>;
};

Specifying softreset control of devices
=======================================

Device nodes should specify the reset channel required in their "resets"
property, containing a phandle to the reset device node and an index specifying
which channel to use.
The index is the bit number within the RCC registers bank, starting from RCC
base address.
It is calculated as: index = register_offset / 4 * 32 + bit_offset.
Where bit_offset is the bit offset within the register.
For example, for CRC reset:
  crc = AHB1RSTR_offset / 4 * 32 + CRCRST_bit_offset = 0x10 / 4 * 32 + 12 = 140

To simplify the usagen and to share bit definition with the clock driver of
the RCC IP, macros are available to generate the index in human-readble
format.

For STM32F4 series, the macro are available here:
 - include/dt-bindings/mfd/stm32f4-rcc.h

example:

	timer2 {
		resets			= <&rcc STM32F4_APB1_RESET(TIM2)>;
	};
